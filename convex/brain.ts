// Em convex/brain.ts
import { action } from "./_generated/server";
import { v } from "convex/values";
import OpenAI from 'openai';

// =================================================================
// 1. ESTRUTURAS DE DADOS (Mantidas como estavam)
// =================================================================

interface ReelContent {
  title: string;
  hook: string;
  main_points: string[];
  cta: string;
}

interface CarouselContent {
  title: string;
  slides: {
    slide_number: number;
    title: string;
    content: string;
  }[];
  cta_slide: string;
}

interface ImagePostContent {
  idea: string;
  caption: string;
  image_prompt: string;
}

interface StorySequenceContent {
  theme: string;
  slides: {
    slide_number: number;
    type: "Poll" | "Quiz" | "Q&A" | "Link" | "Text";
    content: string;
    options?: string[];
  }[];
}

interface BrainResults {
  theme_summary: string;
  target_audience_suggestion: string;
  content_pack: {
    reels: ReelContent[];
    carousels: CarouselContent[];
    image_posts: ImagePostContent[];
    story_sequences: StorySequenceContent[];
  };
}

// =================================================================
// 2. CONFIGURA√á√ÉO ATUALIZADA COM MODELOS CORRETOS
// =================================================================

// Modelos dispon√≠veis no Groq (atualizados)
const GROQ_MODELS = {
  primary: 'llama-3.3-70b-versatile',     // Modelo principal mais recente
  fallback: 'llama-3.1-70b-versatile',    // Fallback se o principal falhar
  fast: 'llama-3.1-8b-instant',           // Modelo r√°pido para respostas simples
  alternative: 'mixtral-8x7b-32768'       // Alternativa Mixtral
};

const groq = new OpenAI({
  apiKey: process.env.GROQ_API_KEY,
  baseURL: 'https://api.groq.com/openai/v1',
});

const openai = process.env.OPENAI_API_KEY ? new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
}) : null;

/**
 * Fun√ß√£o de parse de JSON robusta
 */
function parseAiJsonResponse<T>(text: string): T {
  try {
    const jsonStart = text.indexOf('{');
    const arrayStart = text.indexOf('[');
    let start = -1;

    if (jsonStart === -1 && arrayStart === -1) {
      throw new Error("Nenhum objeto ou array JSON encontrado no texto da IA.");
    }

    if (jsonStart !== -1 && (arrayStart === -1 || jsonStart < arrayStart)) {
      start = jsonStart;
    } else {
      start = arrayStart;
    }

    const jsonEnd = text.lastIndexOf('}');
    const arrayEnd = text.lastIndexOf(']');
    const end = Math.max(jsonEnd, arrayEnd);

    if (start === -1 || end === -1) {
      throw new Error("N√£o foi poss√≠vel delimitar o in√≠cio ou o fim do JSON.");
    }

    const jsonString = text.substring(start, end + 1);
    return JSON.parse(jsonString) as T;

  } catch (error: unknown) {
    if (error instanceof Error) {
      console.error("Erro CR√çTICO ao parsear JSON:", error.message);
    } else {
      console.error("Erro CR√çTICO ao parsear JSON (tipo desconhecido):", error);
    }

    console.error("Texto Recebido da IA:", text);
    throw new Error("Falha ao parsear a resposta JSON da IA.");
  }
}

// Fun√ß√£o para melhorar o prompt
function enhancePrompt(prompt: string, theme: string): string {
  return `
# MISS√ÉO CR√çTICA: CRIAR CONTE√öDO QUE TRANSFORME VIDAS E NEG√ìCIOS

## TEMA: "${theme}"

## SEU PAPEL:
Voc√™ √© um G√äNIO CRIATIVO que combina:
- Psicologia comportamental avan√ßada
- T√©cnicas de storytelling de Hollywood
- Gatilhos mentais comprovados cientificamente
- Estrat√©gias de viraliza√ß√£o do TikTok/Instagram
- Copywriting de convers√£o de 8 figuras

${prompt}

Agora, REVOLUCIONE o tema "${theme}" com conte√∫do que vai MUDAR VIDAS! Me d√™ o resultado em formato JSON.
`;
}

// =================================================================
// 3. L√ìGICA DE GERA√á√ÉO ATUALIZADA COM M√öLTIPLOS MODELOS
// =================================================================

async function generateWithGroq(theme: string): Promise<BrainResults> {
  const basePrompt = `
## MINDSET OBRIGAT√ìRIO:
1. **VALOR EXTREMO**: Cada pe√ßa de conte√∫do deve ser t√£o valiosa que as pessoas pagariam para ter acesso
2. **EMO√á√ÉO PROFUNDA**: Fa√ßa as pessoas SENTIREM algo - medo de perder, esperan√ßa, urg√™ncia, transforma√ß√£o
3. **A√á√ÉO IMEDIATA**: Cada conte√∫do deve gerar uma a√ß√£o espec√≠fica AGORA
4. **MEMOR√ÅVEL**: Use hist√≥rias, analogias e exemplos que grudem na mente
5. **COMPARTILH√ÅVEL**: Crie conte√∫do que as pessoas se ORGULHEM de compartilhar

## ESTRUTURA JSON OBRIGAT√ìRIA:
{
  "theme_summary": "√Çngulo √öNICO e PROVOCATIVO que ningu√©m est√° falando sobre ${theme}",
  "target_audience_suggestion": "Persona ULTRA espec√≠fica com dores e desejos profundos",
  "content_pack": {
    "reels": [
      {
        "title": "T√≠tulo que gera FOMO instant√¢neo",
        "hook": "Primeiros 3 segundos que PARAM o scroll. Use: pergunta chocante, estat√≠stica imposs√≠vel, ou contradi√ß√£o",
        "main_points": [
          "Revela√ß√£o 1: Quebre uma cren√ßa limitante",
          "Revela√ß√£o 2: Mostre o caminho oculto",
          "Revela√ß√£o 3: D√™ a chave da transforma√ß√£o"
        ],
        "cta": "CTA que gera a√ß√£o IMEDIATA com recompensa clara"
      }
    ],
    "carousels": [
      {
        "title": "Promessa GRANDE com n√∫mero espec√≠fico (ex: 7 passos para...)",
        "slides": [
          { "slide_number": 1, "title": "CAPA MATADORA", "content": "T√≠tulo principal + subt√≠tulo que amplifica a promessa" },
          { "slide_number": 2, "title": "Passo 1", "content": "Conte√∫do detalhado do passo 1" },
          { "slide_number": 3, "title": "Passo 2", "content": "Conte√∫do detalhado do passo 2" },
          { "slide_number": 10, "title": "A√á√ÉO AGORA", "content": "CTA espec√≠fico com pr√≥ximo passo claro" }
        ],
        "cta_slide": "Transforme sua vida com ${theme} HOJE! Salve e compartilhe com quem precisa ver isso üöÄ"
      }
    ],
    "image_posts": [
      {
        "idea": "Frase de impacto que PARA o scroll e gera reflex√£o profunda",
        "caption": "Hist√≥ria pessoal emocionante (3-4 par√°grafos) ‚Üí Transi√ß√£o para li√ß√£o universal ‚Üí Lista de 3-5 insights pr√°ticos ‚Üí Pergunta que gera engajamento ‚Üí CTA claro com benef√≠cio ‚Üí Hashtags estrat√©gicas",
        "image_prompt": "Design minimalista impactante: fundo gradiente vibrante, tipografia bold sans-serif, hierarquia visual clara, propor√ß√£o 1:1, estilo premium"
      }
    ],
    "story_sequences": [
      {
        "theme": "Diagn√≥stico R√°pido: Descubra seu n√≠vel em ${theme}",
        "slides": [
          { "slide_number": 1, "type": "Text", "content": "üö® ATEN√á√ÉO: 87% das pessoas est√£o fazendo ${theme} ERRADO. Vamos descobrir se voc√™ √© uma delas?" },
          { "slide_number": 2, "type": "Quiz", "content": "Voc√™ j√° tentou X e n√£o funcionou?", "options": ["Sim, v√°rias vezes", "N√£o, nunca tentei"] },
          { "slide_number": 6, "type": "Link", "content": "B√îNUS EXCLUSIVO 24H: Baixe meu guia gratuito '${theme} Descomplicado' ‚Üí Link na bio! üéÅ" }
        ]
      }
    ]
  }
}`;

  const prompt = enhancePrompt(basePrompt, theme);

  // Lista de modelos para tentar em ordem
  const modelsToTry = [
    GROQ_MODELS.primary,
    GROQ_MODELS.fallback,
    GROQ_MODELS.alternative,
    GROQ_MODELS.fast
  ];

  let lastError: unknown = null;

  // Tenta cada modelo em sequ√™ncia
  for (const model of modelsToTry) {
    try {
      console.log(`üîÑ Tentando gerar com modelo: ${model}...`);

      const response = await groq.chat.completions.create({
        model,
        response_format: { type: 'json_object' },
        messages: [
          {
            role: 'system',
            content: 'Voc√™ √© um G√äNIO do marketing de conte√∫do viral. Crie conte√∫do TRANSFORMADOR que gera resultados REAIS. Responda APENAS em formato JSON v√°lido.'
          },
          { role: 'user', content: prompt },
        ],
        temperature: 0.9,
        max_tokens: 8000,
      });

      const resultText = response.choices[0]?.message?.content;
      if (!resultText) {
        throw new Error(`Modelo ${model} n√£o retornou resultado v√°lido`);
      }

      console.log(`‚úÖ Sucesso com modelo: ${model}`);
      return parseAiJsonResponse<BrainResults>(resultText);

    } catch (error) {
      console.error(`‚ùå Erro com modelo ${model}:`, error);
      lastError = error;

      // Se for erro de modelo descontinuado, tenta o pr√≥ximo
      if (error instanceof Error && error.message.includes('decommissioned')) {
        console.log(`‚ö†Ô∏è Modelo ${model} foi descontinuado, tentando pr√≥ximo...`);
        continue;
      }

      // Para outros erros, tamb√©m tenta o pr√≥ximo modelo
      continue;
    }
  }

  // Se todos os modelos Groq falharem, tenta OpenAI
  if (openai) {
    try {
      console.log("üîÑ Tentando gerar com OpenAI como fallback final...");
      return await generateWithOpenAI(theme);
    } catch (openaiError) {
      console.error("‚ùå Erro com OpenAI tamb√©m:", openaiError);
    }
  }

  // Se tudo falhar, usa fallback est√°tico
  console.error("‚ùå Todos os modelos falharam. √öltimo erro:", lastError);
  throw new Error(`Falha ao gerar conte√∫do com todos os modelos dispon√≠veis`);
}

// Fun√ß√£o de fallback com OpenAI
async function generateWithOpenAI(theme: string): Promise<BrainResults> {
  if (!openai) {
    throw new Error("OpenAI n√£o est√° configurada.");
  }

  const prompt = `Crie um pacote completo de conte√∫do para Instagram sobre "${theme}".

  Retorne um JSON com:
  - theme_summary: resumo estrat√©gico do tema
  - target_audience_suggestion: p√∫blico-alvo espec√≠fico
  - content_pack com arrays de:
    - reels (m√≠nimo 3)
    - carousels (m√≠nimo 2)
    - image_posts (m√≠nimo 3)
    - story_sequences (m√≠nimo 2)

  Cada item deve seguir a estrutura espec√≠fica de seu tipo.`;

  try {
    const response = await openai.chat.completions.create({
        model: 'gpt-4-turbo-preview', // Modelo mais recente
        response_format: { type: 'json_object' },
        messages: [
            { role: 'system', content: 'Voc√™ √© um diretor criativo especializado em marketing de conte√∫do viral. Responda EXCLUSIVAMENTE em JSON v√°lido.' },
            { role: 'user', content: prompt },
        ],
        temperature: 0.7,
        max_tokens: 4000,
    });

    const resultText = response.choices[0]?.message?.content;
    if (!resultText) {
        throw new Error("A OpenAI n√£o retornou um resultado v√°lido.");
    }

    return parseAiJsonResponse<BrainResults>(resultText);
  } catch (error) {
    console.error("Erro ao gerar com OpenAI:", error);
    return generateFallbackContent(theme);
  }
}

// Conte√∫do de fallback melhorado
function generateFallbackContent(theme: string): BrainResults {
    return {
        theme_summary: `Estrat√©gia revolucion√°ria para dominar ${theme} e se destacar no mercado`,
        target_audience_suggestion: `Profissionais e empreendedores que buscam resultados r√°pidos e sustent√°veis em ${theme}`,
        content_pack: {
            reels: [
                {
                    title: `3 erros fatais em ${theme} que destroem seus resultados`,
                    hook: `Se voc√™ est√° fazendo isso em ${theme}, pare AGORA! O #2 √© chocante...`,
                    main_points: [
                        "Erro #1: Focar apenas em t√°ticas sem estrat√©gia",
                        "Erro #2: Ignorar a psicologia do seu p√∫blico",
                        "Erro #3: N√£o medir os resultados corretos"
                    ],
                    cta: "Salve este post e comece a aplicar HOJE! Comenta 'EU' se voc√™ j√° cometeu algum desses erros"
                }
            ],
            carousels: [
                {
                    title: `5 passos para dominar ${theme} em 30 dias`,
                    slides: [
                        { slide_number: 1, title: "TRANSFORME SEU NEG√ìCIO", content: `${theme} nunca mais ser√° um problema` },
                        { slide_number: 2, title: "Passo 1: Fundamentos", content: "Entenda os princ√≠pios b√°sicos que 90% ignora" },
                        { slide_number: 3, title: "Passo 2: Estrat√©gia", content: "Monte seu plano de a√ß√£o personalizado" },
                        { slide_number: 4, title: "Passo 3: Execu√ß√£o", content: "Implemente com o m√©todo comprovado" },
                        { slide_number: 5, title: "Passo 4: Otimiza√ß√£o", content: "Ajuste fino para resultados m√°ximos" },
                        { slide_number: 6, title: "Passo 5: Escala", content: "Multiplique seus resultados" },
                        { slide_number: 7, title: "A√á√ÉO IMEDIATA", content: "Comece HOJE! Salve este post e compartilhe com quem precisa" }
                    ],
                    cta_slide: "Transforme sua realidade com estes 5 passos! üöÄ"
                }
            ],
            image_posts: [
                {
                    idea: `"O sucesso em ${theme} n√£o √© sobre talento, √© sobre sistema"`,
                    caption: `Descobri isso da pior forma poss√≠vel...\n\nDurante anos, achei que ${theme} era quest√£o de dom natural. At√© que percebi: os melhores n√£o s√£o os mais talentosos, s√£o os mais sistem√°ticos.\n\n3 insights que mudaram tudo:\n\n1. Consist√™ncia > Perfei√ß√£o\n2. Sistema > Inspira√ß√£o\n3. Progresso > Resultado\n\nE voc√™, ainda est√° esperando inspira√ß√£o ou j√° est√° construindo seu sistema?\n\n#${theme.replace(/\s+/g, '')} #marketing #sucesso`,
                    image_prompt: "Quote minimalista com fundo gradiente roxo para azul, tipografia moderna bold, composi√ß√£o centralizada"
                }
            ],
            story_sequences: [
                {
                    theme: `Quiz: Qual seu n√≠vel em ${theme}?`,
                    slides: [
                        { slide_number: 1, type: "Text", content: `Vamos descobrir seu n√≠vel real em ${theme}! Responda com sinceridade...` },
                        { slide_number: 2, type: "Quiz", content: "Com que frequ√™ncia voc√™ pratica?", options: ["Diariamente", "Semanalmente", "Raramente"] },
                        { slide_number: 3, type: "Poll", content: "Qual sua maior dificuldade?", options: ["Come√ßar", "Manter consist√™ncia"] },
                        { slide_number: 4, type: "Q&A", content: "Me conta: qual seu maior desafio?" },
                        { slide_number: 5, type: "Link", content: "Baixe o guia completo GR√ÅTIS! Link na bio üéÅ" }
                    ]
                }
            ]
        }
    };
}

// =================================================================
// 4. ACTIONS PRINCIPAIS ATUALIZADAS
// =================================================================

export const generateContentIdeas = action({
  args: {
    theme: v.string(),
    model: v.optional(v.string())
  },
  handler: async (ctx, args) => {
    const identity = await ctx.auth.getUserIdentity();
    if (!identity) {
      throw new Error("Usu√°rio n√£o autenticado");
    }

    if (!args.theme || args.theme.trim().length < 3) {
      throw new Error("Por favor, forne√ßa um tema v√°lido com pelo menos 3 caracteres");
    }

    try {
      console.log(`üöÄ Gerando campanha revolucion√°ria para: "${args.theme}"...`);
      const results = await generateWithGroq(args.theme);
      console.log("‚úÖ Sucesso ao gerar e processar conte√∫do transformador.");

      if (!results.content_pack || !results.content_pack.reels) {
        throw new Error("Estrutura de resultados da IA est√° inv√°lida");
      }

      return results;
    } catch (error) {
      console.error("‚ùå Erro final na gera√ß√£o de conte√∫do, usando fallback est√°tico:", error);
      return generateFallbackContent(args.theme);
    }
  },
});

export const generateOutreachMessage = action({
  args: {
    businessType: v.string(),
    messageType: v.string(),
    customization: v.optional(v.string())
  },
  handler: async (ctx, args) => {
    const identity = await ctx.auth.getUserIdentity();
    if (!identity) throw new Error("N√£o autenticado.");

    const { businessType, messageType, customization } = args;

    const prompt = `
# MISS√ÉO: Gerar uma mensagem de prospec√ß√£o profissional e original.

## REGRAS CR√çTICAS:
1. **IDIOMA:** A mensagem DEVE SER 100% em Portugu√™s do Brasil
2. **ORIGINALIDADE:** Crie um texto √∫nico e personalizado
3. **FORMATO:** Retorne um JSON com "title" e "content"

## DADOS:
- Tipo de Mensagem: ${messageType}
- P√∫blico Alvo: ${businessType}
- Instru√ß√£o: ${customization || "Mensagem padr√£o"}

## ESTRUTURA JSON:
{
  "title": "Assunto curto e atrativo",
  "content": "Corpo da mensagem completo e persuasivo",
  "businessType": "${businessType}",
  "messageType": "${messageType}"
}`;

    try {
      // Tenta com Groq primeiro usando o modelo r√°pido
      if (process.env.GROQ_API_KEY) {
        try {
          const response = await groq.chat.completions.create({
            model: GROQ_MODELS.fast, // Usa modelo r√°pido para mensagens
            response_format: { type: 'json_object' },
            messages: [
              {
                role: 'system',
                content: 'Voc√™ √© um copywriter B2B especialista em prospec√ß√£o. Responda APENAS em JSON v√°lido com textos em Portugu√™s do Brasil.'
              },
              { role: 'user', content: prompt },
            ],
            temperature: 0.8,
          });

          const resultText = response.choices[0]?.message?.content;
          if (resultText) {
            return parseAiJsonResponse(resultText);
          }
        } catch (groqError) {
          console.error("Erro com Groq, tentando OpenAI:", groqError);
        }
      }

      // Fallback para OpenAI
      if (openai) {
        const response = await openai.chat.completions.create({
          model: 'gpt-3.5-turbo',
          response_format: { type: 'json_object' },
          messages: [
            {
              role: 'system',
              content: 'Voc√™ √© um copywriter B2B. Responda em JSON com textos em Portugu√™s do Brasil.'
            },
            { role: 'user', content: prompt },
          ],
          temperature: 0.8,
        });

        const resultText = response.choices[0]?.message?.content;
        if (resultText) {
          return parseAiJsonResponse(resultText);
        }
      }

      throw new Error("Nenhuma API dispon√≠vel");

    } catch (error) {
      console.error("Erro ao gerar mensagem:", error);
      return {
        title: `Proposta para ${businessType}`,
        content: `Ol√°! Gostaria de apresentar uma solu√ß√£o que pode ajudar seu neg√≥cio. Podemos conversar?`,
        businessType,
        messageType
      };
    }
  },
});